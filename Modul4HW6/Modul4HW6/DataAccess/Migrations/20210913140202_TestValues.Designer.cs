// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modul4HW6.DataAccess;

namespace Modul4HW6.DataAccess.Migrations
{
    [DbContext(typeof(Modul4HW6DBContext))]
    [Migration("20210913140202_TestValues")]
    partial class TestValues
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Modul4HW6.Entities.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasMaxLength(7)
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InstagramUrl")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1969, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Jay-Z@gmail.com",
                            InstagramUrl = "https://www.instagram.com/Jay-Z/",
                            Name = "Jay-Z",
                            Phone = "88005553535"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1947, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "EltonJohn@gmail.com",
                            InstagramUrl = "https://www.instagram.com/Elton_John/",
                            Name = "Elton John",
                            Phone = "0509177329"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1972, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Eminem@gmail.com",
                            InstagramUrl = "https://www.instagram.com/Eminem/",
                            Name = "Eminem",
                            Phone = "0937299315"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1958, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "MichaelJackson@gmail.com",
                            InstagramUrl = "https://www.instagram.com/MichaelJackson/",
                            Name = "Michael Jackson",
                            Phone = "17293711842"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1986, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Drake@gmail.com",
                            InstagramUrl = "https://www.instagram.com/Drake/",
                            Name = "Drake",
                            Phone = "32574523451"
                        });
                });

            modelBuilder.Entity("Modul4HW6.Entities.ArtistsSongs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistsId")
                        .HasColumnType("int");

                    b.Property<int>("SongsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistsId");

                    b.HasIndex("SongsId");

                    b.ToTable("ArtistsSongs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistsId = 5,
                            SongsId = 1
                        },
                        new
                        {
                            Id = 2,
                            ArtistsId = 1,
                            SongsId = 2
                        },
                        new
                        {
                            Id = 3,
                            ArtistsId = 1,
                            SongsId = 3
                        },
                        new
                        {
                            Id = 4,
                            ArtistsId = 5,
                            SongsId = 4
                        },
                        new
                        {
                            Id = 5,
                            ArtistsId = 4,
                            SongsId = 5
                        },
                        new
                        {
                            Id = 6,
                            ArtistsId = 4,
                            SongsId = 6
                        },
                        new
                        {
                            Id = 7,
                            ArtistsId = 2,
                            SongsId = 7
                        },
                        new
                        {
                            Id = 8,
                            ArtistsId = 2,
                            SongsId = 8
                        },
                        new
                        {
                            Id = 9,
                            ArtistsId = 3,
                            SongsId = 9
                        },
                        new
                        {
                            Id = 10,
                            ArtistsId = 3,
                            SongsId = 10
                        });
                });

            modelBuilder.Entity("Modul4HW6.Entities.Ganre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Ganres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Rap"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Pop music"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Jazz"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Rock"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Country"
                        });
                });

            modelBuilder.Entity("Modul4HW6.Entities.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<int>("GanreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleasedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("GanreId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = 2.54,
                            GanreId = 1,
                            ReleasedDate = new DateTime(2016, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "One Dance"
                        },
                        new
                        {
                            Id = 2,
                            Duration = 4.3799999999999999,
                            GanreId = 1,
                            ReleasedDate = new DateTime(2009, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Empire State Of Mind"
                        },
                        new
                        {
                            Id = 3,
                            Duration = 4.1500000000000004,
                            GanreId = 1,
                            ReleasedDate = new DateTime(2010, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Young Forever"
                        },
                        new
                        {
                            Id = 4,
                            Duration = 5.4699999999999998,
                            GanreId = 1,
                            ReleasedDate = new DateTime(2018, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Marvins Room"
                        },
                        new
                        {
                            Id = 5,
                            Duration = 4.1900000000000004,
                            GanreId = 2,
                            ReleasedDate = new DateTime(1987, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Bad"
                        },
                        new
                        {
                            Id = 6,
                            Duration = 4.5300000000000002,
                            GanreId = 2,
                            ReleasedDate = new DateTime(1982, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Billie Jean"
                        },
                        new
                        {
                            Id = 7,
                            Duration = 2.54,
                            GanreId = 2,
                            ReleasedDate = new DateTime(1989, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Sacrifice"
                        },
                        new
                        {
                            Id = 8,
                            Duration = 6.46,
                            GanreId = 2,
                            ReleasedDate = new DateTime(1971, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Tiny Dancer"
                        },
                        new
                        {
                            Id = 9,
                            Duration = 4.1500000000000004,
                            GanreId = 1,
                            ReleasedDate = new DateTime(2018, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Venom"
                        },
                        new
                        {
                            Id = 10,
                            Duration = 4.1699999999999999,
                            GanreId = 1,
                            ReleasedDate = new DateTime(2009, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Mockingbird"
                        });
                });

            modelBuilder.Entity("Modul4HW6.Entities.ArtistsSongs", b =>
                {
                    b.HasOne("Modul4HW6.Entities.Artist", "Artist")
                        .WithMany("Songs")
                        .HasForeignKey("ArtistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modul4HW6.Entities.Song", "Song")
                        .WithMany("Artists")
                        .HasForeignKey("SongsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("Modul4HW6.Entities.Song", b =>
                {
                    b.HasOne("Modul4HW6.Entities.Ganre", "Ganre")
                        .WithMany("Songs")
                        .HasForeignKey("GanreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ganre");
                });

            modelBuilder.Entity("Modul4HW6.Entities.Artist", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Modul4HW6.Entities.Ganre", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Modul4HW6.Entities.Song", b =>
                {
                    b.Navigation("Artists");
                });
#pragma warning restore 612, 618
        }
    }
}
